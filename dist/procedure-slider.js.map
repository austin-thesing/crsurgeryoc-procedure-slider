{
  "version": 3,
  "sources": ["../src/procedure-slider.js"],
  "sourcesContent": [
    "// Simple custom slider that moves one slide at a time\nfunction initializeSlider() {\n  console.log(\"🔍 Looking for slider elements...\");\n  \n  const sliderContainer = document.querySelector(\".swiper\");\n  const nextBtn = document.querySelector(\".swiper-btn-next\");\n  const prevBtn = document.querySelector(\".swiper-btn-prev\");\n  \n  console.log(\"Slider container:\", sliderContainer);\n  console.log(\"Next button:\", nextBtn);\n  console.log(\"Prev button:\", prevBtn);\n  \n  if (!sliderContainer) {\n    console.error(\"❌ No .swiper container found\");\n    return;\n  }\n  \n  const wrapper = sliderContainer.querySelector(\".swiper-wrapper\");\n  const slides = sliderContainer.querySelectorAll(\".swiper-slide\");\n  \n  console.log(\"Swiper wrapper:\", wrapper);\n  console.log(\"Slides found:\", slides.length);\n  \n  if (!wrapper || slides.length === 0) {\n    console.error(\"❌ No slides found\");\n    return;\n  }\n  \n  let currentIndex = 0;\n  \n  function updateSlider() {\n    // Get the width of one slide (assuming they're all the same width)\n    const slideWidth = slides[0].offsetWidth;\n    const spaceBetween = 24; // Match your spacing\n    const translateX = -(currentIndex * (slideWidth + spaceBetween));\n    \n    wrapper.style.transform = `translateX(${translateX}px)`;\n    wrapper.style.transition = \"transform 0.3s ease\";\n    \n    console.log(`Moved to slide ${currentIndex + 1}/${slides.length}`);\n    \n    // Update button states\n    if (prevBtn) {\n      prevBtn.style.opacity = currentIndex === 0 ? \"0.5\" : \"1\";\n      prevBtn.style.pointerEvents = currentIndex === 0 ? \"none\" : \"auto\";\n    }\n    \n    if (nextBtn) {\n      nextBtn.style.opacity = currentIndex === slides.length - 1 ? \"0.5\" : \"1\";\n      nextBtn.style.pointerEvents = currentIndex === slides.length - 1 ? \"none\" : \"auto\";\n    }\n  }\n  \n  // Next button click\n  if (nextBtn) {\n    nextBtn.addEventListener(\"click\", () => {\n      if (currentIndex < slides.length - 1) {\n        currentIndex++;\n        updateSlider();\n      }\n    });\n  }\n  \n  // Previous button click\n  if (prevBtn) {\n    prevBtn.addEventListener(\"click\", () => {\n      if (currentIndex > 0) {\n        currentIndex--;\n        updateSlider();\n      }\n    });\n  }\n  \n  // Initialize\n  updateSlider();\n  \n  console.log(\"✅ Custom slider initialized successfully!\");\n}\n\n// Initialize when DOM is ready\nif (document.readyState === \"loading\") {\n  document.addEventListener(\"DOMContentLoaded\", initializeSlider);\n} else {\n  initializeSlider();\n}"
  ],
  "mappings": "MACA,SAAS,CAAgB,EAAG,CAC1B,QAAQ,IAAI,6CAAkC,EAE9C,IAAM,EAAkB,SAAS,cAAc,SAAS,EAClD,EAAU,SAAS,cAAc,kBAAkB,EACnD,EAAU,SAAS,cAAc,kBAAkB,EAMzD,GAJA,QAAQ,IAAI,oBAAqB,CAAe,EAChD,QAAQ,IAAI,eAAgB,CAAO,EACnC,QAAQ,IAAI,eAAgB,CAAO,GAE9B,EAAiB,CACpB,QAAQ,MAAM,8BAA6B,EAC3C,OAGF,IAAM,EAAU,EAAgB,cAAc,iBAAiB,EACzD,EAAS,EAAgB,iBAAiB,eAAe,EAK/D,GAHA,QAAQ,IAAI,kBAAmB,CAAO,EACtC,QAAQ,IAAI,gBAAiB,EAAO,MAAM,GAErC,GAAW,EAAO,SAAW,EAAG,CACnC,QAAQ,MAAM,mBAAkB,EAChC,OAGF,IAAI,EAAe,EAEnB,SAAS,CAAY,EAAG,CAEtB,IAAM,EAAa,EAAO,GAAG,YACvB,EAAe,GACf,IAAe,GAAgB,EADhB,KASrB,GANA,EAAQ,MAAM,UAAY,cAAc,OACxC,EAAQ,MAAM,WAAa,sBAE3B,QAAQ,IAAI,kBAAkB,EAAe,KAAK,EAAO,QAAQ,EAG7D,EACF,EAAQ,MAAM,QAAU,IAAiB,EAAI,MAAQ,IACrD,EAAQ,MAAM,cAAgB,IAAiB,EAAI,OAAS,OAG9D,GAAI,EACF,EAAQ,MAAM,QAAU,IAAiB,EAAO,OAAS,EAAI,MAAQ,IACrE,EAAQ,MAAM,cAAgB,IAAiB,EAAO,OAAS,EAAI,OAAS,OAKhF,GAAI,EACF,EAAQ,iBAAiB,QAAS,IAAM,CACtC,GAAI,EAAe,EAAO,OAAS,EACjC,IACA,EAAa,EAEhB,EAIH,GAAI,EACF,EAAQ,iBAAiB,QAAS,IAAM,CACtC,GAAI,EAAe,EACjB,IACA,EAAa,EAEhB,EAIH,EAAa,EAEb,QAAQ,IAAI,2CAA0C,EAIxD,GAAI,SAAS,aAAe,UAC1B,SAAS,iBAAiB,mBAAoB,CAAgB,EAE9D,OAAiB",
  "debugId": "649E665C00969CE764756E2164756E21",
  "names": []
}